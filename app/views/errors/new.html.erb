<div id="map" style="width: 60%;height: 30em;"></div>

<div class="sidebar">
	<div id="step1" class="step">
		<h2>Step 1</h2>
		<p>Pan the map and zoom in to the area where you've spotted an error. Then click the "Place a marker" button, drag the marker on the exact spot of the error and click "Done!"</p>
	</div>

	<div id="step2" class="step" style="display: none;">
		<h2>Step 2</h2>
		<p>Fill in the form below and submit. Remember that people correcting errors are from various countries but generally they're operating in their own country. Therefore if you're reporting an error in, say, Italy, please write in Italian if you can. If you can't, then in English or your own language.</p>
	</div>
	
	<div id="step3" class="step" style="display: none;">
		<h2>Done!</h2>
		<p>Thanks a million!</p>
	</div>

	<form id="marker-controls" class="action" name="marker_controls" action="#" method="post">
		<input name="create_marker" onclick="createMarker();return false;" type="button" value="Place a marker" />
		<input name="clear_marker" onclick="clearMarker();return false;" type="button" value="Clear marker" />
		<input name="save_marker" onclick="saveMarker();return false;" type="button" value="Done!" />
	</form>

	<div id="error-details" class="action" style="display: none;">
		<% remote_form_for(@error, :html => { :name => "new_error" }) do |e| %>
			<p>"You need to <%= select("error", "resolution", Error.const_get("Resolutions").sort{|a,b| a[1]<=>b[1]}.collect {|r| [ r[1], r[1] ] }, { :include_blank => false }) %> a <%= select("error", "feature_id", Feature.find(:all, :order => "name ASC").collect {|f| [ f.name.downcase, f.id ] }, { :include_blank => false }) %> here!"</p>
			<p>Please leave a comment for more details:
			<%= e.text_area :comment, :rows => 5 %></p>
			<p>...and an e-mail address so we can get back to you for further information.
			<%= e.text_field :email %></p>
			<input type="hidden" id="lon" name="lon" value="" />
			<input type="hidden" id="lat" name="lat" value="" />
			<%= e.submit "Tell us!" %>
		<% end %>
	</div>
	
	<div id="done" class="action" style="display: none;">
		<p>Now you can either <%= link_to 'report another error', '#', :onclick => 'prepareStep(1);return false;' %> or hop to <%= link_to 'the main OpenStreetMap website', 'http://openstreetmap.org' %> to look at some beautiful maps and maybe <%= link_to 'start to contribute', 'http://wiki.openstreetmap.org/index.php/Beginners%27_Guide' %>!</p>
	</div>
</div>

<script type="text/javascript">

function prepareStep(step) {
	switch(step) {
		case 1:	if (marker) {
					markerLayer.removeFeatures(feature);
				}
				var marker_coords;
				marker = false;

				document.getElementById("step2").hide();
				document.getElementById("error-details").hide();

				document.getElementById("step3").hide();
				document.getElementById("done").hide();

				document.getElementById("step1").show();
				document.getElementById("marker-controls").show();
				
				document.marker_controls.create_marker.disabled=false;
				document.marker_controls.clear_marker.disabled=true;
				document.marker_controls.save_marker.disabled=true;

				break;
		
		case 2:	document.getElementById("step1").hide();
				document.getElementById("marker-controls").hide();

				document.getElementById("step3").hide();
				document.getElementById("done").hide();
		
				document.getElementById("step2").show();
				document.getElementById("error-details").show();
				
				break;
				
		case 3:	document.getElementById("step1").hide();
				document.getElementById("marker-controls").hide();

				document.getElementById("step2").hide();
				document.getElementById("error-details").hide();

				document.getElementById("step3").show();
				document.getElementById("done").show();
		
				break;
	}
}

function createMarker() {
	if( marker == false ) {
		//create the marker at the center of the map
		point = new OpenLayers.Geometry.Point(map.center.lon, map.center.lat);
		style = {"graphicOpacity":1, 
		 "externalGraphic":"/openlayers/img/marker.png", 
		 "graphicXOffset":-10.5, 
		 "graphicYOffset":-25, 
		 "graphicWidth":21, 
		 "graphicHeight":25, 
		 "id":"error_marker", 
		 "strokeLinecap":"round", 
		 "strokeOpacity":1, 
		 "fillOpacity":1, 
		 "pointRadius":0};
		feature = new OpenLayers.Feature.Vector(point, null, style);
		
		markerLayer.addFeatures([feature]);
	
		marker = true;
	
		//disable the create_marker button and enable the 2 others
		document.marker_controls.create_marker.disabled=true;
		document.marker_controls.clear_marker.disabled=false;
		document.marker_controls.save_marker.disabled=false;
		
	} else {
		alert("There's already a marker!")
	}
}

function clearMarker() {
	if( marker == true ) {
		//delete the marker
		markerLayer.removeFeatures(feature);
	
		marker = false;
	
		//enable the create_marker button and disable the 2 others
		document.marker_controls.create_marker.disabled=false;
		document.marker_controls.clear_marker.disabled=true;
		document.marker_controls.save_marker.disabled=true;
	} else {
		alert("No marker to clear!")
	}
}

function saveMarker() {
	if( marker == true ) {
		//put the marker coords away in a var
		marker_coords = markerLayer.features.first().geometry.transform(map.getProjectionObject(), wgs84)
		
		document.new_error.lon.value=marker_coords.x;
		document.new_error.lat.value=marker_coords.y;
		
		//go to step 2
		prepareStep(2);
	} else {
		alert("No marker to save!")
	}
}

var map;
var marker = false;
var wgs84 = new OpenLayers.Projection('WGS84')

prepareStep(1);

map = new OpenLayers.Map('map',
	{ controls: [],
	maxExtent: new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508),
	numZoomLevels: 18,
	maxResolution: 156543,
	units: 'm',
	displayProjection: wgs84,
	projection: "EPSG:41001"});


var layerMapnik = new OpenLayers.Layer.OSM.Mapnik("Mapnik");
var layerTah = new OpenLayers.Layer.OSM.Osmarender("Tiles@Home");
map.addLayers([layerMapnik,layerTah]);

//var markerLayer = new OpenLayers.Layer.Markers("Marker");
markerLayer = new OpenLayers.Layer.Vector("Vector Layer");
map.addLayer(markerLayer);

map.addControl(new OpenLayers.Control.LayerSwitcher());
map.addControl(new OpenLayers.Control.Navigation());
map.addControl(new OpenLayers.Control.PanZoomBar());
map.addControl(new OpenLayers.Control.MousePosition());
dragfeature = new OpenLayers.Control.DragFeature(markerLayer);
map.addControl(dragfeature);
dragfeature.activate();

var center = new OpenLayers.LonLat(<%= @location[:lon] %>,<%= @location[:lat] %>);
center.transform(wgs84, map.getProjectionObject());

map.setCenter(center, <%= @location[:zoom] %>);

</script>
