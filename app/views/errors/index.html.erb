<div id="map" style="width: 60%;height: 30em;"></div>

<div id="about" class="sidebar">
	<p><%= "Spotted an error on the OpenStreetMap? Take a look at the map on the right and zoom in to the area where you think there's an error to check if somebody hasn't reported it yet.".t %></p>
	<p><%= "See the zoom bar on the left side of the map?".t %> <%= "When the slider is on the red zone, the map shows only the latest reported errors for the displayed area. When it is in the green zone, it displays all reported errors.".t %> <%= "That's why you need to zoom in to check whether your problem has already been reported or not.".t %></p>
	<p class="center button">
		<a href="<%= url_for report_path %>"><%= "Report an error.".t %></a>
	</p>
</div>

<script type="text/javascript">

function updateMarkers() {
	bbox = map.getExtent();
	bbox.transform(map.getProjectionObject(), wgs84);
	
    <%= remote_function(:with => "'zoom=' + map.zoom + '&left=' + bbox.left + '&bottom=' + bbox.bottom + '&right=' + bbox.right + '&top=' + bbox.top", :url => { :action => 'update_markers' }) %>

	position = new OpenLayers.LonLat( map.center.lon, map.center.lat ).transform( map.getProjectionObject(), wgs84 );
	document.getElementById('about').getElementsBySelector('p.button a').first().href = '<%= url_for report_path %>/' + position.lon + '/' + position.lat + '/' + map.zoom ;
}

var map;
wgs84 = new OpenLayers.Projection('WGS84')

map = new OpenLayers.Map('map',
	{ controls: [],
	maxExtent: new OpenLayers.Bounds(-20037508,-20037508,20037508,20037508),
	numZoomLevels: 18,
	maxResolution: 156543,
	units: 'm',
	displayProjection: wgs84,
	projection: "EPSG:41001"});


var layerMapnik = new OpenLayers.Layer.OSM.Mapnik("<%= "Mapnik".t %>");
var layerTah = new OpenLayers.Layer.OSM.Osmarender("<%= "Tiles@Home".t %>");
map.addLayers([layerMapnik,layerTah]);

var numZoomLevels = Math.max(layerMapnik.numZoomLevels, layerTah.numZoomLevels);

var addmarkers = new OpenLayers.Layer.Markers( "<%= "Features to add".t %>", {
      numZoomLevels: numZoomLevels
   });
map.addLayer(addmarkers);
var modmarkers = new OpenLayers.Layer.Markers( "<%= "Features to modify".t %>", {
      numZoomLevels: numZoomLevels
   });
map.addLayer(modmarkers);
var delmarkers = new OpenLayers.Layer.Markers( "<%= "Features to delete".t %>", {
      numZoomLevels: numZoomLevels
   });
map.addLayer(delmarkers);

map.addControl(new OpenLayers.Control.LayerSwitcher());
map.addControl(new OpenLayers.Control.TypocosmyNavigation());
map.addControl(new OpenLayers.Control.TypocosmyPanZoomBar());
map.addControl(new OpenLayers.Control.MousePosition());


var center = new OpenLayers.LonLat(<%= @location[:lon] %>,<%= @location[:lat] %>);
center.transform(wgs84, map.getProjectionObject());
map.setCenter(center, <%= @location[:zoom] %>);

var size = new OpenLayers.Size(18,25);
var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
var add_icon = new OpenLayers.Icon('/openlayers/img/add-feature.png',size,offset);
var modify_icon = new OpenLayers.Icon('/openlayers/img/modify-feature.png',size,offset);
var delete_icon = new OpenLayers.Icon('/openlayers/img/delete-feature.png',size,offset);

updateMarkers();
</script>
